name: Build Binaries

on:
  push:
    branches:
      - main
    tags:
      - '**'
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    container: golang:1
    strategy:
      matrix:
        GOOS: ["linux", "darwin", "windows"]
        GOARCH: ["amd64", "arm64"]
    steps:
      - uses: actions/checkout@v2

      - name: Build Binary
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: chia-exporter-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: ${{ github.workspace }}/bin/chia-exporter

  release:
    runs-on: ubuntu-latest
    needs:
      - build
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Show artifacts
        run: tree artifacts

      - name: Generate artifact zips
        run: |
          cd ${{ github.workspace }}/artifacts || exit 1
          DIRS=$(find . -type d -name 'chia-exporter*')
          while IFS= read -r dir; do
            echo "Creating zip for $dir..."
            zip -r $dir.zip $dir
          done <<< "$DIRS"

      - name: Get zip filenames
        id: release-files
        run: |
          FILES=$(find ${{ github.workspace }}/artifacts -type f -name 'chia-exporter*.zip')
          # Replace chars in the manner GHA expects to this ends up multiline in the next step
          FILES="${FILES//'%'/'%25'}"
          FILES="${FILES//$'\n'/'%0A'}"
          FILES="${FILES//$'\r'/'%0D'}"
          echo "::set-output name=FILES::$FILES"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ steps.release-files.outputs.FILES }}
